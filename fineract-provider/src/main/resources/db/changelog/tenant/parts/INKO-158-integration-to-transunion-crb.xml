<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
    <changeSet author="bosco@fiter.io" id="post-consumer-credit-to-transunion-crb-job">

        <preConditions onFail="MARK_RAN">
            <not>
                <sqlCheck expectedResult="1">
                    SELECT COUNT(1) FROM job WHERE name = 'Post Rwanda Consumer Credit To TransUnion (CRB)'
                </sqlCheck>
            </not>
        </preConditions>

        <insert tableName="job">
            <column name="name" value="Post Rwanda Consumer Credit To TransUnion (CRB)" />
            <column name="display_name" value="Post Rwanda Consumer Credit To TransUnion (CRB)" />
            <column name="cron_expression" value="0 0 22 1/1 * ? *" />
            <column name="create_time" value="now()" />
            <column name="task_priority" value="5" />
            <column name="group_name" value="null" />
            <column name="previous_run_start_time" value="null" />
            <column name="next_run_time" value="null" />
            <column name="job_key" value="Post Rwanda Consumer Credit To TransUnion (CRB) _ DEFAULT" />
            <column name="initializing_errorlog" value="null" />
            <column name="is_active" valueBoolean="true" />
            <column name="currently_running" valueBoolean="false" />
            <column name="updates_allowed" valueBoolean="true" />
            <column name="scheduler_group" value="1" />
            <column name="is_misfired" valueBoolean="false" />
            <column name="node_id" value="0" />
            <column name="is_mismatched_job" valueBoolean="false" />

        </insert>
    </changeSet>


    <changeSet author="bosco@fiter.io" id="add_m_address_physical_address_district">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_address" columnName="physical_address_district"/>
            </not>
        </preConditions>
        <addColumn tableName="m_address">
            <column name="physical_address_district" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_m_address_physical_address_sector">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_address" columnName="physical_address_sector"/>
            </not>
        </preConditions>
        <addColumn tableName="m_address">
            <column name="physical_address_sector" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_m_address_physical_address_cell">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_address" columnName="physical_address_cell"/>
            </not>
        </preConditions>
        <addColumn tableName="m_address">
            <column name="physical_address_cell" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_field_configuration_for_client_address_physicalAddressDistrict">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(1) from m_field_configuration where field = 'physicalAddressDistrict' and entity = 'ADDRESS' and subentity='CLIENT';
            </sqlCheck>
        </preConditions>
        <insert tableName="m_field_configuration">
            <column name="entity" value="ADDRESS"/>
            <column name="subentity" value="CLIENT"/>
            <column name="field" value="physicalAddressDistrict"/>
            <column name="is_enabled" valueBoolean="true"/>
            <column name="is_mandatory" valueBoolean="true"/>
            <column name="validation_regex" value=""/>
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_field_configuration_for_client_address_physicalAddressSector">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(1) from m_field_configuration where field = 'physicalAddressSector' and entity = 'ADDRESS' and subentity='CLIENT';
            </sqlCheck>
        </preConditions>
        <insert tableName="m_field_configuration">
            <column name="entity" value="ADDRESS"/>
            <column name="subentity" value="CLIENT"/>
            <column name="field" value="physicalAddressSector"/>
            <column name="is_enabled" valueBoolean="true"/>
            <column name="is_mandatory" valueBoolean="true"/>
            <column name="validation_regex" value=""/>
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_field_configuration_for_client_address_physicalAddressCell">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(1) from m_field_configuration where field = 'physicalAddressCell' and entity = 'ADDRESS' and subentity='CLIENT';
            </sqlCheck>
        </preConditions>
        <insert tableName="m_field_configuration">
            <column name="entity" value="ADDRESS"/>
            <column name="subentity" value="CLIENT"/>
            <column name="field" value="physicalAddressCell"/>
            <column name="is_enabled" valueBoolean="true"/>
            <column name="is_mandatory" valueBoolean="true"/>
            <column name="validation_regex" value=""/>
        </insert>
    </changeSet>
    <changeSet id="update_field_configuration_for_client_address_addressLine1_is_mandatory" author="bosco@fiter.io">
        <sql>
            update m_field_configuration set is_mandatory = TRUE where  field='addressLine1';
        </sql>
    </changeSet>
    <changeSet id="update_field_configuration_for_client_address_stateProvinceId_is_mandatory" author="bosco@fiter.io">
        <sql>
            update m_field_configuration set is_mandatory = TRUE where  field='stateProvinceId';
        </sql>
    </changeSet>
    <changeSet id="update_field_configuration_for_client_address_countryId_is_mandatory" author="bosco@fiter.io">
        <sql>
            update m_field_configuration set is_mandatory = TRUE where  field='countryId';
        </sql>
    </changeSet>
    <changeSet id="update_field_configuration_for_client_address_postalCode_is_mandatory" author="bosco@fiter.io">
        <sql>
            update m_field_configuration set is_mandatory = TRUE where  field='postalCode';
        </sql>
    </changeSet>
    <changeSet id="update_field_configuration_for_client_address_addressType_is_mandatory_3" author="bosco@fiter.io">
        <sql>
            update m_field_configuration set is_mandatory = TRUE where  field='addressType';
        </sql>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="add_m_client_other_info_national_identification_number">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_client_other_info" columnName="national_identification_number"/>
            </not>
        </preConditions>
        <addColumn tableName="m_client_other_info">
            <column name="national_identification_number" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="add_m_client_other_info_passport_number">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_client_other_info" columnName="passport_number"/>
            </not>
        </preConditions>
        <addColumn tableName="m_client_other_info">
            <column name="passport_number" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="add_m_client_other_info_bank_account_number">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_client_other_info" columnName="bank_account_number"/>
            </not>
        </preConditions>
        <addColumn tableName="m_client_other_info">
            <column name="bank_account_number" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="add_m_client_other_info_bank_name">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_client_other_info" columnName="bank_name"/>
            </not>
        </preConditions>
        <addColumn tableName="m_client_other_info">
            <column name="bank_name" type="VARCHAR(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_m_loan_stop_consumer_credit_upload_to_trans_union">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_loan" columnName="stop_consumer_credit_upload_to_trans_union"/>
            </not>
        </preConditions>
        <addColumn tableName="m_loan">
            <column name="stop_consumer_credit_upload_to_trans_union" type="boolean" defaultValueBoolean="false">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="add_m_loan_stop_consumer_credit_upload_to_trans_union_on_2">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_loan" columnName="stop_consumer_credit_upload_to_trans_union_on"/>
            </not>
        </preConditions>
        <addColumn tableName="m_loan">
            <column name="stop_consumer_credit_upload_to_trans_union_on" type="timestamp" defaultValueComputed="now()">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="upload-rwanda-consumer-credit-to-transunion-crb-postgresql" context="postgresql">
        <insert tableName="stretchy_report">
            <column name="report_name" value="Rwanda Consumer Credit To TransUnion (CRB) Report"/>
            <column name="report_type" value="Table"/>
            <column name="report_subtype"/>
            <column name="report_category" value="Loan"/>
            <column name="report_sql" value="WITH RankedAddresses AS (
    SELECT client_id,
           address_id,
           ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY address_id DESC) AS row_num
    FROM m_client_address
)
SELECT l.id                                                                              AS loanId,
       l.account_no                                                                      AS accountNumber,
       l.loan_status_id                                                                  AS loanStatus,
       l.currency_code                                                                   AS currencyType,
       country_cv.code_value                                                             AS country,
       mc.firstname                                                                      AS surName,
       CAST(EXTRACT(DAY FROM (now()::TIMESTAMP - mlaa.overdue_since_date_derived::TIMESTAMP)) AS INTEGER) AS daysInArrears,
       mc.firstname                                                                      AS foreName1,
       mc.middlename                                                                     AS foreName2,
       mc.lastname                                                                       AS foreName3,
       l.principal_disbursed_derived                                                     AS openingBalance,
       CASE
           WHEN l.repayment_period_frequency_enum = 0 THEN 'DLY'
           WHEN l.repayment_period_frequency_enum = 1 THEN 'WKY'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'MTH'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'ANN'
           ELSE 'IRR'
           END                                                                           AS accountRepaymentTerm,
       l.total_outstanding_derived                                                       AS currentBalance,
       'O'                                                                               AS accountOwner,
       CASE
           WHEN l.repayment_period_frequency_enum = 1 THEN 'W'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'M'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'A'
           END                                                                           AS incomeFrequency,
       l.principal_disbursed_derived + l.interest_charged_derived                        AS scheduledPaymentAmount,
       mc.mobile_no                                                                      AS mobileTelephone,
       (l.principal_repaid_derived + l.interest_repaid_derived + l.fee_charges_repaid_derived +
        l.penalty_charges_repaid_derived)                                                AS actualPaymentAmount,
       l.disbursedon_date                                                                AS dateAccountOpened,
       l.nominal_interest_rate_per_period                                                AS interestRateAtDisbursement,
       info.number_of_dependents                                                         AS noOfDependants,
       nationality_cv.code_value                                                         AS nationality,
       UPPER(title_cv.code_value)                                                        AS salutation,
       ra.postal_code                                                                    AS postalCode,
       province_cv.code_value                                                            AS physicalAddressProvince,
       CASE
           WHEN marital_cv.code_value = 'Single' THEN 'S'
           WHEN marital_cv.code_value = 'Married' THEN 'M'
           WHEN marital_cv.code_value = 'Divorced' THEN 'D'
           WHEN marital_cv.code_value = 'Widowed' THEN 'W'
           ELSE 'O'
           END                                                                           AS maritalStatus,
       ra.postal_code                                                                    AS postalAddressNumber,
       l.approvedon_date                                                                 AS approvalDate,
       CASE
           WHEN gender_cv.code_value = 'Male' THEN 'M'
           WHEN gender_cv.code_value = 'Female' THEN 'F'
           END                                                                           AS gender,
       first_payment.firstPaymentDate                                                    AS firstPaymentDate,
       l.closedon_date                                                                   AS dateClosed,
       CASE
           WHEN l.loan_status_id = 300 THEN 'A'
           WHEN l.loan_status_id = 600 THEN 'C'
           WHEN l.loan_status_id = 601 THEN 'W'
           WHEN l.loan_status_id = 700 THEN 'X'
           END                                                                           AS accountStatus,
       l.number_of_repayments                                                            AS termsDuration,
       l.last_repayment_date                                                             AS lastPaymentDate,
       mc.date_of_birth                                                                  AS dateOfBirth,
       l.maturedon_date                                                                  AS finalPaymentDate,
       mlaa.principal_overdue_derived                                                    AS amountPastDue,
       40                                                                                AS category,
       'Other personal service activities n.e.c.'                                        AS sectorOfActivity,
       'I'                                                                               AS accountType,
       ra.physical_address_district                                                      AS physicalAddressDistrict,
       ''                                                                                AS groupName,
       'D'                                                                               AS currentBalanceIndicator,
       ra.physical_address_sector                                                        AS physicalAddressSector,
       0                                                                                 AS numberOfJointLoanParticipants,
       ra.physical_address_cell                                                          AS physicalAddressCell,
       13                                                                                AS nature,
       other_info.national_identification_number                                         AS nationalId,
       other_info.passport_number                                                        AS passportNumber,
       1                                                                                 AS classification,
       ''                                                                                AS emailAddress,
       'T'                                                                               AS residenceType,
       0                                                                                 AS availableCredit,
       0                                                                                 AS income,
       ''                                                                                AS homeTelephone,
       ''                                                                                AS workTelephone,
       l.last_modified_on_utc                                                            AS dateAccountUpdated,
       r.installments_in_arrears                                                         AS installmentsInArrears
FROM m_loan l
         INNER JOIN m_client mc ON l.client_id = mc.id
         LEFT JOIN m_client_recruitment_survey mcrs ON mc.id = mcrs.client_id
         LEFT JOIN m_code_value country_cv ON mcrs.country_cv_id = country_cv.id
         LEFT JOIN m_loan_arrears_aging mlaa ON l.id = mlaa.loan_id
         LEFT JOIN m_client_other_info info ON mc.id = info.client_id
         LEFT JOIN m_code_value nationality_cv ON info.nationality_cv_id = nationality_cv.id
         LEFT JOIN m_client_additional_info ad_info ON mc.id = ad_info.client_id
         LEFT JOIN m_client_other_info other_info ON mc.id = other_info.client_id
         LEFT JOIN m_code_value marital_cv ON ad_info.marital_status = marital_cv.id
         LEFT JOIN m_code_value gender_cv ON mc.gender_cv_id = gender_cv.id
         LEFT JOIN m_code_value title_cv ON ad_info.title = title_cv.id

         LEFT JOIN (
    SELECT loan_id,
           transaction_date AS firstPaymentDate
    FROM (
             SELECT loan_id,
                    transaction_date,
                    ROW_NUMBER() OVER (PARTITION BY loan_id ORDER BY transaction_date) AS row_num
             FROM m_loan_transaction
             WHERE transaction_type_enum = 2
         ) ranked_transactions
    WHERE row_num = 1
) AS first_payment ON l.id = first_payment.loan_id
         LEFT JOIN (
    SELECT client_id,
           MAX(address_id) AS last_address_id
    FROM m_client_address
    GROUP BY client_id
) AS last_client_address ON mc.id = last_client_address.client_id
         LEFT JOIN m_address ra ON last_client_address.last_address_id = ra.id
         LEFT JOIN (SELECT loan_id,
                           COUNT(*) AS installments_in_arrears
                    FROM m_loan_repayment_schedule
                    WHERE duedate &lt;= CURRENT_DATE
                      AND completed_derived = FALSE
                      AND obligations_met_on_date IS NULL
                    GROUP BY loan_id) AS r ON l.id = r.loan_id
         LEFT JOIN m_code_value province_cv ON ra.state_province_id = province_cv.id
WHERE l.loan_status_id IN (300, 600, 601, 700)
  AND l.currency_code = 'RWF'
  AND first_payment.firstPaymentDate IS NOT NULL
  AND l.last_repayment_date IS NOT NULL
  AND (l.stop_consumer_credit_upload_to_trans_union IS NULL OR l.stop_consumer_credit_upload_to_trans_union = false) "/>
            <column name="core_report" valueBoolean="true"/>
            <column name="use_report" valueBoolean="true"/>
            <column name="self_service_user_report" valueBoolean="false"/>
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="upload-rwanda-consumer-credit-to-transunion-crb-mysql" context="mysql">
        <insert tableName="stretchy_report">
            <column name="report_name" value="Rwanda Consumer Credit To TransUnion (CRB) Report"/>
            <column name="report_type" value="Table"/>
            <column name="report_subtype"/>
            <column name="report_category" value="Loan"/>
            <column name="report_sql" value="WITH RankedAddresses AS (
    SELECT client_id,
           address_id,
           ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY address_id DESC) AS row_num
    FROM m_client_address
)
SELECT l.id                                                                              AS loanId,
       l.account_no                                                                      AS accountNumber,
       l.loan_status_id                                                                  AS loanStatus,
       l.currency_code                                                                   AS currencyType,
       country_cv.code_value                                                             AS country,
       mc.firstname                                                                      AS surName,
       DATEDIFF(NOW(), mlaa.overdue_since_date_derived)                                  AS daysInArrears,
       mc.firstname                                                                      AS foreName1,
       mc.middlename                                                                     AS foreName2,
       mc.lastname                                                                       AS foreName3,
       l.principal_disbursed_derived                                                     AS openingBalance,
       CASE
           WHEN l.repayment_period_frequency_enum = 0 THEN 'DLY'
           WHEN l.repayment_period_frequency_enum = 1 THEN 'WKY'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'MTH'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'ANN'
           ELSE 'IRR'
           END                                                                           AS accountRepaymentTerm,
       l.total_outstanding_derived                                                       AS currentBalance,
       'O'                                                                               AS accountOwner,
       CASE
           WHEN l.repayment_period_frequency_enum = 1 THEN 'W'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'M'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'A'
           END                                                                           AS incomeFrequency,
       l.principal_disbursed_derived + l.interest_charged_derived                        AS scheduledPaymentAmount,
       mc.mobile_no                                                                      AS mobileTelephone,
       (l.principal_repaid_derived + l.interest_repaid_derived + l.fee_charges_repaid_derived +
        l.penalty_charges_repaid_derived)                                                AS actualPaymentAmount,
       l.disbursedon_date                                                                AS dateAccountOpened,
       l.nominal_interest_rate_per_period                                                AS interestRateAtDisbursement,
       info.number_of_dependents                                                         AS noOfDependants,
       nationality_cv.code_value                                                         AS nationality,
       UPPER(title_cv.code_value)                                                        AS salutation,
       ra.postal_code                                                                    AS postalCode,
       province_cv.code_value                                                            AS physicalAddressProvince,
       CASE
           WHEN marital_cv.code_value = 'Single' THEN 'S'
           WHEN marital_cv.code_value = 'Married' THEN 'M'
           WHEN marital_cv.code_value = 'Divorced' THEN 'D'
           WHEN marital_cv.code_value = 'Widowed' THEN 'W'
           ELSE 'O'
           END                                                                           AS maritalStatus,
       ra.postal_code                                                                    AS postalAddressNumber,
       l.approvedon_date                                                                 AS approvalDate,
       CASE
           WHEN gender_cv.code_value = 'Male' THEN 'M'
           WHEN gender_cv.code_value = 'Female' THEN 'F'
           END                                                                           AS gender,
       first_payment.firstPaymentDate                                                    AS firstPaymentDate,
       l.closedon_date                                                                   AS dateClosed,
       CASE
           WHEN l.loan_status_id = 300 THEN 'A'
           WHEN l.loan_status_id = 600 THEN 'C'
           WHEN l.loan_status_id = 601 THEN 'W'
           WHEN l.loan_status_id = 700 THEN 'X'
           END                                                                           AS accountStatus,
       l.number_of_repayments                                                            AS termsDuration,
       l.last_repayment_date                                                             AS lastPaymentDate,
       mc.date_of_birth                                                                  AS dateOfBirth,
       l.maturedon_date                                                                  AS finalPaymentDate,
       mlaa.principal_overdue_derived                                                    AS amountPastDue,
       40                                                                                AS category,
       'Other personal service activities n.e.c.'                                        AS sectorOfActivity,
       'I'                                                                               AS accountType,
       ra.physical_address_district                                                      AS physicalAddressDistrict,
       ''                                                                                AS groupName,
       'D'                                                                               AS currentBalanceIndicator,
       ra.physical_address_sector                                                        AS physicalAddressSector,
       0                                                                                 AS numberOfJointLoanParticipants,
       ra.physical_address_cell                                                          AS physicalAddressCell,
       13                                                                                AS nature,
       other_info.national_identification_number                                         AS nationalId,
       other_info.passport_number                                                        AS passportNumber,
       1                                                                                 AS classification,
       ''                                                                                AS emailAddress,
       'T'                                                                               AS residenceType,
       0                                                                                 AS availableCredit,
       0                                                                                 AS income,
       ''                                                                                AS homeTelephone,
       ''                                                                                AS workTelephone,
       l.last_modified_on_utc                                                            AS dateAccountUpdated,
       r.installments_in_arrears                                                         AS installmentsInArrears
FROM m_loan l
         INNER JOIN m_client mc ON l.client_id = mc.id
         LEFT JOIN m_client_recruitment_survey mcrs ON mc.id = mcrs.client_id
         LEFT JOIN m_code_value country_cv ON mcrs.country_cv_id = country_cv.id
         LEFT JOIN m_loan_arrears_aging mlaa ON l.id = mlaa.loan_id
         LEFT JOIN m_client_other_info info ON mc.id = info.client_id
         LEFT JOIN m_code_value nationality_cv ON info.nationality_cv_id = nationality_cv.id
         LEFT JOIN m_client_additional_info ad_info ON mc.id = ad_info.client_id
         LEFT JOIN m_client_other_info other_info ON mc.id = other_info.client_id
         LEFT JOIN m_code_value marital_cv ON ad_info.marital_status = marital_cv.id
         LEFT JOIN m_code_value gender_cv ON mc.gender_cv_id = gender_cv.id
         LEFT JOIN m_code_value title_cv ON ad_info.title = title_cv.id

         LEFT JOIN (
    SELECT loan_id,
           transaction_date AS firstPaymentDate
    FROM (
             SELECT loan_id,
                    transaction_date,
                    ROW_NUMBER() OVER (PARTITION BY loan_id ORDER BY transaction_date) AS row_num
             FROM m_loan_transaction
             WHERE transaction_type_enum = 2
         ) ranked_transactions
    WHERE row_num = 1
) AS first_payment ON l.id = first_payment.loan_id
         LEFT JOIN (
    SELECT client_id,
           MAX(address_id) AS last_address_id
    FROM m_client_address
    GROUP BY client_id
) AS last_client_address ON mc.id = last_client_address.client_id
         LEFT JOIN m_address ra ON last_client_address.last_address_id = ra.id
         LEFT JOIN (SELECT loan_id,
                           COUNT(*) AS installments_in_arrears
                    FROM m_loan_repayment_schedule
                    WHERE duedate &lt;= CURRENT_DATE
                      AND completed_derived = FALSE
                      AND obligations_met_on_date IS NULL
                    GROUP BY loan_id) AS r ON l.id = r.loan_id
         LEFT JOIN m_code_value province_cv ON ra.state_province_id = province_cv.id
WHERE l.loan_status_id IN (300, 600, 601, 700)
  AND l.currency_code = 'RWF'
  AND first_payment.firstPaymentDate IS NOT NULL
  AND l.last_repayment_date IS NOT NULL
  AND (l.stop_consumer_credit_upload_to_trans_union IS NULL OR l.stop_consumer_credit_upload_to_trans_union = false) "/>
            <column name="core_report" valueBoolean="true"/>
            <column name="use_report" valueBoolean="true"/>
            <column name="self_service_user_report" valueBoolean="false"/>
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="upload-rwanda-consumer-credit-to-transunion-crb-postgresql-v2" context="postgresql">
        <update tableName="stretchy_report">
            <column name="report_sql" value="WITH RankedAddresses AS (
    SELECT client_id,
           address_id,
           ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY address_id DESC) AS row_num
    FROM m_client_address
)
SELECT l.id                                                                              AS loanId,
       l.account_no                                                                      AS accountNumber,
       l.loan_status_id                                                                  AS loanStatus,
       l.currency_code                                                                   AS currencyType,
       country_cv.code_value                                                             AS country,
       mc.firstname                                                                      AS surName,
       CAST(EXTRACT(DAY FROM (now()::TIMESTAMP - mlaa.overdue_since_date_derived::TIMESTAMP)) AS INTEGER) AS daysInArrears,
       mc.firstname                                                                      AS foreName1,
       mc.middlename                                                                     AS foreName2,
       mc.lastname                                                                       AS foreName3,
       l.principal_disbursed_derived                                                     AS openingBalance,
       CASE
           WHEN l.repayment_period_frequency_enum = 0 THEN 'DLY'
           WHEN l.repayment_period_frequency_enum = 1 THEN 'WKY'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'MTH'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'ANN'
           ELSE 'IRR'
           END                                                                           AS accountRepaymentTerm,
       l.total_outstanding_derived                                                       AS currentBalance,
       'O'                                                                               AS accountOwner,
       CASE
           WHEN l.repayment_period_frequency_enum = 1 THEN 'W'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'M'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'A'
           END                                                                           AS incomeFrequency,
       l.principal_disbursed_derived + l.interest_charged_derived                        AS scheduledPaymentAmount,
       mc.mobile_no                                                                      AS mobileTelephone,
       (l.principal_repaid_derived + l.interest_repaid_derived + l.fee_charges_repaid_derived +
        l.penalty_charges_repaid_derived)                                                AS actualPaymentAmount,
       l.disbursedon_date                                                                AS dateAccountOpened,
       l.nominal_interest_rate_per_period                                                AS interestRateAtDisbursement,
       info.number_of_dependents                                                         AS noOfDependants,
       nationality_cv.code_value                                                         AS nationality,
       UPPER(title_cv.code_value)                                                        AS salutation,
       ra.postal_code                                                                    AS postalCode,
       province_cv.code_value                                                            AS physicalAddressProvince,
       CASE
           WHEN marital_cv.code_value = 'Single' THEN 'S'
           WHEN marital_cv.code_value = 'Married' THEN 'M'
           WHEN marital_cv.code_value = 'Divorced' THEN 'D'
           WHEN marital_cv.code_value = 'Widowed' THEN 'W'
           ELSE 'O'
           END                                                                           AS maritalStatus,
       ra.postal_code                                                                    AS postalAddressNumber,
       l.approvedon_date                                                                 AS approvalDate,
       CASE
           WHEN gender_cv.code_value = 'Male' THEN 'M'
           WHEN gender_cv.code_value = 'Female' THEN 'F'
           END                                                                           AS gender,
       first_payment.firstPaymentDate                                                    AS firstPaymentDate,
       l.closedon_date                                                                   AS dateClosed,
       CASE
           WHEN l.loan_status_id = 300 THEN 'A'
           WHEN l.loan_status_id = 600 THEN 'C'
           WHEN l.loan_status_id = 601 THEN 'W'
           WHEN l.loan_status_id = 700 THEN 'X'
           END                                                                           AS accountStatus,
       l.number_of_repayments                                                            AS termsDuration,
       l.last_repayment_date                                                             AS lastPaymentDate,
       mc.date_of_birth                                                                  AS dateOfBirth,
       l.maturedon_date                                                                  AS finalPaymentDate,
       mlaa.principal_overdue_derived                                                    AS amountPastDue,
       40                                                                                AS category,
       'Other personal service activities n.e.c.'                                        AS sectorOfActivity,
       'I'                                                                               AS accountType,
       ra.physical_address_district                                                      AS physicalAddressDistrict,
       ''                                                                                AS groupName,
       'D'                                                                               AS currentBalanceIndicator,
       ra.physical_address_sector                                                        AS physicalAddressSector,
       0                                                                                 AS numberOfJointLoanParticipants,
       ra.physical_address_cell                                                          AS physicalAddressCell,
       13                                                                                AS nature,
       other_info.national_identification_number                                         AS nationalId,
       other_info.passport_number                                                        AS passportNumber,
       1                                                                                 AS classification,
       ''                                                                                AS emailAddress,
       'T'                                                                               AS residenceType,
       0                                                                                 AS availableCredit,
       0                                                                                 AS income,
       ''                                                                                AS homeTelephone,
       ''                                                                                AS workTelephone,
       l.last_modified_on_utc                                                            AS dateAccountUpdated,
       r.installments_in_arrears                                                         AS installmentsInArrears
FROM m_loan l
         INNER JOIN m_client mc ON l.client_id = mc.id
         LEFT JOIN m_client_recruitment_survey mcrs ON mc.id = mcrs.client_id
         LEFT JOIN m_code_value country_cv ON mcrs.country_cv_id = country_cv.id
         LEFT JOIN m_loan_arrears_aging mlaa ON l.id = mlaa.loan_id
         LEFT JOIN m_client_other_info info ON mc.id = info.client_id
         LEFT JOIN m_code_value nationality_cv ON info.nationality_cv_id = nationality_cv.id
         LEFT JOIN m_client_additional_info ad_info ON mc.id = ad_info.client_id
         LEFT JOIN m_client_other_info other_info ON mc.id = other_info.client_id
         LEFT JOIN m_code_value marital_cv ON ad_info.marital_status = marital_cv.id
         LEFT JOIN m_code_value gender_cv ON mc.gender_cv_id = gender_cv.id
         LEFT JOIN m_code_value title_cv ON ad_info.title = title_cv.id

         LEFT JOIN (
    SELECT loan_id,
           transaction_date AS firstPaymentDate
    FROM (
             SELECT loan_id,
                    transaction_date,
                    ROW_NUMBER() OVER (PARTITION BY loan_id ORDER BY transaction_date) AS row_num
             FROM m_loan_transaction
             WHERE transaction_type_enum = 2
         ) ranked_transactions
    WHERE row_num = 1
) AS first_payment ON l.id = first_payment.loan_id
         LEFT JOIN (
    SELECT client_id,
           MAX(address_id) AS last_address_id
    FROM m_client_address
    GROUP BY client_id
) AS last_client_address ON mc.id = last_client_address.client_id
         LEFT JOIN m_address ra ON last_client_address.last_address_id = ra.id
         LEFT JOIN (SELECT loan_id,
                           COUNT(*) AS installments_in_arrears
                    FROM m_loan_repayment_schedule
                    WHERE duedate &lt;= CURRENT_DATE
                      AND completed_derived = FALSE
                      AND obligations_met_on_date IS NULL
                    GROUP BY loan_id) AS r ON l.id = r.loan_id
         LEFT JOIN m_code_value province_cv ON ra.state_province_id = province_cv.id
WHERE l.loan_status_id IN (300, 600, 601, 700)
  AND l.currency_code = 'RWF'
  AND first_payment.firstPaymentDate IS NOT NULL
  AND l.last_repayment_date IS NOT NULL
  AND mc.legal_form_enum = 1
  AND (l.stop_consumer_credit_upload_to_trans_union IS NULL OR l.stop_consumer_credit_upload_to_trans_union = false)  "/>
            <where>report_name = 'Rwanda Consumer Credit To TransUnion (CRB) Report'</where>
        </update>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="upload-rwanda-consumer-credit-to-transunion-crb-mysql-v2" context="mysql">
        <update tableName="stretchy_report">
            <column name="report_sql" value="WITH RankedAddresses AS (
    SELECT client_id,
           address_id,
           ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY address_id DESC) AS row_num
    FROM m_client_address
)
SELECT l.id                                                                              AS loanId,
       l.account_no                                                                      AS accountNumber,
       l.loan_status_id                                                                  AS loanStatus,
       l.currency_code                                                                   AS currencyType,
       country_cv.code_value                                                             AS country,
       mc.firstname                                                                      AS surName,
       DATEDIFF(NOW(), mlaa.overdue_since_date_derived)                                  AS daysInArrears,
       mc.firstname                                                                      AS foreName1,
       mc.middlename                                                                     AS foreName2,
       mc.lastname                                                                       AS foreName3,
       l.principal_disbursed_derived                                                     AS openingBalance,
       CASE
           WHEN l.repayment_period_frequency_enum = 0 THEN 'DLY'
           WHEN l.repayment_period_frequency_enum = 1 THEN 'WKY'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'MTH'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'ANN'
           ELSE 'IRR'
           END                                                                           AS accountRepaymentTerm,
       l.total_outstanding_derived                                                       AS currentBalance,
       'O'                                                                               AS accountOwner,
       CASE
           WHEN l.repayment_period_frequency_enum = 1 THEN 'W'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'M'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'A'
           END                                                                           AS incomeFrequency,
       l.principal_disbursed_derived + l.interest_charged_derived                        AS scheduledPaymentAmount,
       mc.mobile_no                                                                      AS mobileTelephone,
       (l.principal_repaid_derived + l.interest_repaid_derived + l.fee_charges_repaid_derived +
        l.penalty_charges_repaid_derived)                                                AS actualPaymentAmount,
       l.disbursedon_date                                                                AS dateAccountOpened,
       l.nominal_interest_rate_per_period                                                AS interestRateAtDisbursement,
       info.number_of_dependents                                                         AS noOfDependants,
       nationality_cv.code_value                                                         AS nationality,
       UPPER(title_cv.code_value)                                                        AS salutation,
       ra.postal_code                                                                    AS postalCode,
       province_cv.code_value                                                            AS physicalAddressProvince,
       CASE
           WHEN marital_cv.code_value = 'Single' THEN 'S'
           WHEN marital_cv.code_value = 'Married' THEN 'M'
           WHEN marital_cv.code_value = 'Divorced' THEN 'D'
           WHEN marital_cv.code_value = 'Widowed' THEN 'W'
           ELSE 'O'
           END                                                                           AS maritalStatus,
       ra.postal_code                                                                    AS postalAddressNumber,
       l.approvedon_date                                                                 AS approvalDate,
       CASE
           WHEN gender_cv.code_value = 'Male' THEN 'M'
           WHEN gender_cv.code_value = 'Female' THEN 'F'
           END                                                                           AS gender,
       first_payment.firstPaymentDate                                                    AS firstPaymentDate,
       l.closedon_date                                                                   AS dateClosed,
       CASE
           WHEN l.loan_status_id = 300 THEN 'A'
           WHEN l.loan_status_id = 600 THEN 'C'
           WHEN l.loan_status_id = 601 THEN 'W'
           WHEN l.loan_status_id = 700 THEN 'X'
           END                                                                           AS accountStatus,
       l.number_of_repayments                                                            AS termsDuration,
       l.last_repayment_date                                                             AS lastPaymentDate,
       mc.date_of_birth                                                                  AS dateOfBirth,
       l.maturedon_date                                                                  AS finalPaymentDate,
       mlaa.principal_overdue_derived                                                    AS amountPastDue,
       40                                                                                AS category,
       'Other personal service activities n.e.c.'                                        AS sectorOfActivity,
       'I'                                                                               AS accountType,
       ra.physical_address_district                                                      AS physicalAddressDistrict,
       ''                                                                                AS groupName,
       'D'                                                                               AS currentBalanceIndicator,
       ra.physical_address_sector                                                        AS physicalAddressSector,
       0                                                                                 AS numberOfJointLoanParticipants,
       ra.physical_address_cell                                                          AS physicalAddressCell,
       13                                                                                AS nature,
       other_info.national_identification_number                                         AS nationalId,
       other_info.passport_number                                                        AS passportNumber,
       1                                                                                 AS classification,
       ''                                                                                AS emailAddress,
       'T'                                                                               AS residenceType,
       0                                                                                 AS availableCredit,
       0                                                                                 AS income,
       ''                                                                                AS homeTelephone,
       ''                                                                                AS workTelephone,
       l.last_modified_on_utc                                                            AS dateAccountUpdated,
       r.installments_in_arrears                                                         AS installmentsInArrears
FROM m_loan l
         INNER JOIN m_client mc ON l.client_id = mc.id
         LEFT JOIN m_client_recruitment_survey mcrs ON mc.id = mcrs.client_id
         LEFT JOIN m_code_value country_cv ON mcrs.country_cv_id = country_cv.id
         LEFT JOIN m_loan_arrears_aging mlaa ON l.id = mlaa.loan_id
         LEFT JOIN m_client_other_info info ON mc.id = info.client_id
         LEFT JOIN m_code_value nationality_cv ON info.nationality_cv_id = nationality_cv.id
         LEFT JOIN m_client_additional_info ad_info ON mc.id = ad_info.client_id
         LEFT JOIN m_client_other_info other_info ON mc.id = other_info.client_id
         LEFT JOIN m_code_value marital_cv ON ad_info.marital_status = marital_cv.id
         LEFT JOIN m_code_value gender_cv ON mc.gender_cv_id = gender_cv.id
         LEFT JOIN m_code_value title_cv ON ad_info.title = title_cv.id

         LEFT JOIN (
    SELECT loan_id,
           transaction_date AS firstPaymentDate
    FROM (
             SELECT loan_id,
                    transaction_date,
                    ROW_NUMBER() OVER (PARTITION BY loan_id ORDER BY transaction_date) AS row_num
             FROM m_loan_transaction
             WHERE transaction_type_enum = 2
         ) ranked_transactions
    WHERE row_num = 1
) AS first_payment ON l.id = first_payment.loan_id
         LEFT JOIN (
    SELECT client_id,
           MAX(address_id) AS last_address_id
    FROM m_client_address
    GROUP BY client_id
) AS last_client_address ON mc.id = last_client_address.client_id
         LEFT JOIN m_address ra ON last_client_address.last_address_id = ra.id
         LEFT JOIN (SELECT loan_id,
                           COUNT(*) AS installments_in_arrears
                    FROM m_loan_repayment_schedule
                    WHERE duedate &lt;= CURRENT_DATE
                      AND completed_derived = FALSE
                      AND obligations_met_on_date IS NULL
                    GROUP BY loan_id) AS r ON l.id = r.loan_id
         LEFT JOIN m_code_value province_cv ON ra.state_province_id = province_cv.id
WHERE l.loan_status_id IN (300, 600, 601, 700)
  AND l.currency_code = 'RWF'
  AND first_payment.firstPaymentDate IS NOT NULL
  AND l.last_repayment_date IS NOT NULL
  AND mc.legal_form_enum = 1
  AND (l.stop_consumer_credit_upload_to_trans_union IS NULL OR l.stop_consumer_credit_upload_to_trans_union = false) "/>
            <where>report_name = 'Rwanda Consumer Credit To TransUnion (CRB) Report'</where>
        </update>
    </changeSet>

    <changeSet author="bosco@fiter.io" id="upload-rwanda-corporate-credit-to-transunion-crb-postgresql" context="postgresql">
        <insert tableName="stretchy_report">
            <column name="report_name" value="Rwanda Corporate Credit To TransUnion (CRB) Report"/>
            <column name="report_type" value="Table"/>
            <column name="report_subtype"/>
            <column name="report_category" value="Loan"/>
            <column name="report_sql" value="WITH RankedAddresses AS (
    SELECT client_id,
           address_id,
           ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY address_id DESC) AS row_num
    FROM m_client_address
)
SELECT l.id                                                                              AS loanId,
       l.account_no                                                                      AS accountNumber,
       l.loan_status_id                                                                  AS loanStatus,
       l.currency_code                                                                   AS currencyType,
       country_cv.code_value                                                             AS country,
       mc.fullname                                                                      AS institution,
       mc.fullname                                                                      AS tradingName,
       CAST(EXTRACT(DAY FROM (now()::TIMESTAMP - mlaa.overdue_since_date_derived::TIMESTAMP)) AS INTEGER) AS daysInArrears,
       mpl.max_principal_amount                                                     AS openingBalance,
       CASE
           WHEN l.repayment_period_frequency_enum = 0 THEN 'DLY'
           WHEN l.repayment_period_frequency_enum = 1 THEN 'WKY'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'MTH'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'ANN'
           ELSE 'IRR'
           END                                                                           AS accountRepaymentTerm,
       l.total_outstanding_derived                                                       AS currentBalance,
       'O'                                                                               AS accountOwner,
       CASE
           WHEN l.repayment_period_frequency_enum = 1 THEN 'W'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'M'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'A'
           END                                                                           AS incomeFrequency,
       l.principal_disbursed_derived + l.interest_charged_derived                        AS scheduledPaymentAmount,
       mc.mobile_no                                                                      AS telephone1,
       (l.principal_repaid_derived + l.interest_repaid_derived)                          AS actualPaymentAmount,
       l.disbursedon_date                                                                AS dateAccountOpened,
       l.nominal_interest_rate_per_period                                                AS interestRateAtDisbursement,
       nationality_cv.code_value                                                         AS nationality,
       ra.postal_code                                                                    AS postalCode,
       province_cv.code_value                                                            AS physicalAddressProvince,
       ra.postal_code                                                                    AS postalAddressNumber,
       l.approvedon_date                                                                 AS approvalDate,
       first_payment.firstPaymentDate                                                    AS firstPaymentDate,
       l.closedon_date                                                                   AS dateClosed,
       CASE
           WHEN l.loan_status_id = 300 THEN 'A'
           WHEN l.loan_status_id = 600 THEN 'C'
           WHEN l.loan_status_id = 601 THEN 'W'
           WHEN l.loan_status_id = 700 THEN 'X'
           END                                                                           AS accountStatus,
       l.number_of_repayments                                                            AS termsDuration,
       l.last_repayment_date                                                             AS lastPaymentDate,
       mc.date_of_birth                                                                  AS companyRegistrationDate,
       l.maturedon_date                                                                  AS finalPaymentDate,
       mlaa.principal_overdue_derived                                                    AS amountPastDue,
       40                                                                                AS category,
       'Other personal service activities n.e.c.'                                        AS sectorOfActivity,
       'I'                                                                               AS accountType,
       ra.physical_address_district                                                      AS physicalAddressDistrict,
       ''                                                                                AS groupName,
       'D'                                                                               AS currentBalanceIndicator,
       ra.physical_address_sector                                                        AS physicalAddressSector,
       0                                                                                 AS numberOfJointLoanParticipants,
       ra.physical_address_cell                                                          AS physicalAddressCell,
       ra.address_line_1                                                                 AS physicalAddressLine1,
       13                                                                                AS nature,
       1                                                                                 AS classification,
       ''                                                                                AS emailAddress,
       'T'                                                                               AS residenceType,
       0                                                                                 AS availableCredit,
       0                                                                                 AS income,
       l.last_repayment_date                                                             AS dateAccountUpdated,
       r.installments_in_arrears                                                         AS installmentsInArrears,
       mcnp.incorp_no                                                                    AS companyRegNo,
       business_line_cv.code_value                                                       AS industry,
       other_info.tax_identification_number                                              AS taxNo
FROM m_loan l
         INNER JOIN m_product_loan mpl ON l.product_id = mpl.id
         INNER JOIN m_client mc ON l.client_id = mc.id
         INNER JOIN m_client_non_person mcnp on mc.id = mcnp.client_id
         LEFT JOIN m_client_recruitment_survey mcrs ON mc.id = mcrs.client_id
         LEFT JOIN m_code_value country_cv ON mcrs.country_cv_id = country_cv.id
         LEFT JOIN m_loan_arrears_aging mlaa ON l.id = mlaa.loan_id
         LEFT JOIN m_client_other_info info ON mc.id = info.client_id
         LEFT JOIN m_code_value nationality_cv ON info.nationality_cv_id = nationality_cv.id
         LEFT JOIN m_code_value business_line_cv ON mcnp.main_business_line_cv_id = business_line_cv.id
         LEFT JOIN m_client_additional_info ad_info ON mc.id = ad_info.client_id
         LEFT JOIN m_client_other_info other_info ON mc.id = other_info.client_id

         LEFT JOIN (
    SELECT loan_id,
           transaction_date AS firstPaymentDate
    FROM (
             SELECT loan_id,
                    transaction_date,
                    ROW_NUMBER() OVER (PARTITION BY loan_id ORDER BY transaction_date) AS row_num
             FROM m_loan_transaction
             WHERE transaction_type_enum = 2
         ) ranked_transactions
    WHERE row_num = 1
) AS first_payment ON l.id = first_payment.loan_id
         LEFT JOIN (
    SELECT client_id,
           MAX(address_id) AS last_address_id
    FROM m_client_address
    GROUP BY client_id
) AS last_client_address ON mc.id = last_client_address.client_id
         LEFT JOIN m_address ra ON last_client_address.last_address_id = ra.id
         LEFT JOIN (SELECT loan_id,
                           COUNT(*) AS installments_in_arrears
                    FROM m_loan_repayment_schedule
                    WHERE duedate &lt;= CURRENT_DATE
                      AND completed_derived = FALSE
                      AND obligations_met_on_date IS NULL
                    GROUP BY loan_id) AS r ON l.id = r.loan_id
         LEFT JOIN m_code_value province_cv ON ra.state_province_id = province_cv.id
WHERE l.loan_status_id IN (300, 600, 601, 700)
  AND l.currency_code = 'RWF'
  AND mc.legal_form_enum = 2
  AND first_payment.firstPaymentDate IS NOT NULL
  AND l.last_repayment_date IS NOT NULL
  AND (l.stop_consumer_credit_upload_to_trans_union IS NULL OR l.stop_consumer_credit_upload_to_trans_union = false) "/>
            <column name="core_report" valueBoolean="true"/>
            <column name="use_report" valueBoolean="true"/>
            <column name="self_service_user_report" valueBoolean="false"/>
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="post-corporate-credit-to-transunion-crb-job">

        <preConditions onFail="MARK_RAN">
            <not>
                <sqlCheck expectedResult="1">
                    SELECT COUNT(1) FROM job WHERE name = 'Post Rwanda Corporate Credit To TransUnion (CRB)'
                </sqlCheck>
            </not>
        </preConditions>

        <insert tableName="job">
            <column name="name" value="Post Rwanda Corporate Credit To TransUnion (CRB)" />
            <column name="display_name" value="Post Rwanda Corporate Credit To TransUnion (CRB)" />
            <column name="cron_expression" value="0 0 22 1/1 * ? *" />
            <column name="create_time" value="now()" />
            <column name="task_priority" value="5" />
            <column name="group_name" value="null" />
            <column name="previous_run_start_time" value="null" />
            <column name="next_run_time" value="null" />
            <column name="job_key" value="Post Rwanda Corporate Credit To TransUnion (CRB) _ DEFAULT" />
            <column name="initializing_errorlog" value="null" />
            <column name="is_active" valueBoolean="true" />
            <column name="currently_running" valueBoolean="false" />
            <column name="updates_allowed" valueBoolean="true" />
            <column name="scheduler_group" value="1" />
            <column name="is_misfired" valueBoolean="false" />
            <column name="node_id" value="0" />
            <column name="is_mismatched_job" valueBoolean="false" />

        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="upload-rwanda-corporate-credit-to-transunion-crb-mysql" context="mysql">
        <insert tableName="stretchy_report">
            <column name="report_name" value="Rwanda Corporate Credit To TransUnion (CRB) Report"/>
            <column name="report_type" value="Table"/>
            <column name="report_subtype"/>
            <column name="report_category" value="Loan"/>
            <column name="report_sql" value="WITH RankedAddresses AS (
    SELECT client_id,
           address_id,
           ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY address_id DESC) AS row_num
    FROM m_client_address
)
SELECT l.id                                                                              AS loanId,
       l.account_no                                                                      AS accountNumber,
       l.loan_status_id                                                                  AS loanStatus,
       l.currency_code                                                                   AS currencyType,
       country_cv.code_value                                                             AS country,
       mc.fullname                                                                      AS institution,
       mc.fullname                                                                      AS tradingName,
       DATEDIFF(NOW(), mlaa.overdue_since_date_derived)                                  AS daysInArrears,
       mpl.max_principal_amount                                                     AS openingBalance,
       CASE
           WHEN l.repayment_period_frequency_enum = 0 THEN 'DLY'
           WHEN l.repayment_period_frequency_enum = 1 THEN 'WKY'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'MTH'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'ANN'
           ELSE 'IRR'
           END                                                                           AS accountRepaymentTerm,
       l.total_outstanding_derived                                                       AS currentBalance,
       'O'                                                                               AS accountOwner,
       CASE
           WHEN l.repayment_period_frequency_enum = 1 THEN 'W'
           WHEN l.repayment_period_frequency_enum = 2 THEN 'M'
           WHEN l.repayment_period_frequency_enum = 3 THEN 'A'
           END                                                                           AS incomeFrequency,
       l.principal_disbursed_derived + l.interest_charged_derived                        AS scheduledPaymentAmount,
       mc.mobile_no                                                                      AS telephone1,
       (l.principal_repaid_derived + l.interest_repaid_derived)                          AS actualPaymentAmount,
       l.disbursedon_date                                                                AS dateAccountOpened,
       l.nominal_interest_rate_per_period                                                AS interestRateAtDisbursement,
       nationality_cv.code_value                                                         AS nationality,
       ra.postal_code                                                                    AS postalCode,
       province_cv.code_value                                                            AS physicalAddressProvince,
       ra.postal_code                                                                    AS postalAddressNumber,
       l.approvedon_date                                                                 AS approvalDate,
       first_payment.firstPaymentDate                                                    AS firstPaymentDate,
       l.closedon_date                                                                   AS dateClosed,
       CASE
           WHEN l.loan_status_id = 300 THEN 'A'
           WHEN l.loan_status_id = 600 THEN 'C'
           WHEN l.loan_status_id = 601 THEN 'W'
           WHEN l.loan_status_id = 700 THEN 'X'
           END                                                                           AS accountStatus,
       l.number_of_repayments                                                            AS termsDuration,
       l.last_repayment_date                                                             AS lastPaymentDate,
       mc.date_of_birth                                                                  AS companyRegistrationDate,
       l.maturedon_date                                                                  AS finalPaymentDate,
       mlaa.principal_overdue_derived                                                    AS amountPastDue,
       40                                                                                AS category,
       'Other personal service activities n.e.c.'                                        AS sectorOfActivity,
       'I'                                                                               AS accountType,
       ra.physical_address_district                                                      AS physicalAddressDistrict,
       ''                                                                                AS groupName,
       'D'                                                                               AS currentBalanceIndicator,
       ra.physical_address_sector                                                        AS physicalAddressSector,
       0                                                                                 AS numberOfJointLoanParticipants,
       ra.physical_address_cell                                                          AS physicalAddressCell,
       ra.address_line_1                                                                 AS physicalAddressLine1,
       13                                                                                AS nature,
       1                                                                                 AS classification,
       ''                                                                                AS emailAddress,
       'T'                                                                               AS residenceType,
       0                                                                                 AS availableCredit,
       0                                                                                 AS income,
       l.last_repayment_date                                                             AS dateAccountUpdated,
       r.installments_in_arrears                                                         AS installmentsInArrears,
       mcnp.incorp_no                                                                    AS companyRegNo,
       business_line_cv.code_value                                                       AS industry,
       other_info.tax_identification_number                                              AS taxNo
FROM m_loan l
         INNER JOIN m_product_loan mpl ON l.product_id = mpl.id
         INNER JOIN m_client mc ON l.client_id = mc.id
         INNER JOIN m_client_non_person mcnp on mc.id = mcnp.client_id
         LEFT JOIN m_client_recruitment_survey mcrs ON mc.id = mcrs.client_id
         LEFT JOIN m_code_value country_cv ON mcrs.country_cv_id = country_cv.id
         LEFT JOIN m_loan_arrears_aging mlaa ON l.id = mlaa.loan_id
         LEFT JOIN m_client_other_info info ON mc.id = info.client_id
         LEFT JOIN m_code_value nationality_cv ON info.nationality_cv_id = nationality_cv.id
         LEFT JOIN m_code_value business_line_cv ON mcnp.main_business_line_cv_id = business_line_cv.id
         LEFT JOIN m_client_additional_info ad_info ON mc.id = ad_info.client_id
         LEFT JOIN m_client_other_info other_info ON mc.id = other_info.client_id

         LEFT JOIN (
    SELECT loan_id,
           transaction_date AS firstPaymentDate
    FROM (
             SELECT loan_id,
                    transaction_date,
                    ROW_NUMBER() OVER (PARTITION BY loan_id ORDER BY transaction_date) AS row_num
             FROM m_loan_transaction
             WHERE transaction_type_enum = 2
         ) ranked_transactions
    WHERE row_num = 1
) AS first_payment ON l.id = first_payment.loan_id
         LEFT JOIN (
    SELECT client_id,
           MAX(address_id) AS last_address_id
    FROM m_client_address
    GROUP BY client_id
) AS last_client_address ON mc.id = last_client_address.client_id
         LEFT JOIN m_address ra ON last_client_address.last_address_id = ra.id
         LEFT JOIN (SELECT loan_id,
                           COUNT(*) AS installments_in_arrears
                    FROM m_loan_repayment_schedule
                    WHERE duedate &lt;= CURRENT_DATE
                      AND completed_derived = FALSE
                      AND obligations_met_on_date IS NULL
                    GROUP BY loan_id) AS r ON l.id = r.loan_id
         LEFT JOIN m_code_value province_cv ON ra.state_province_id = province_cv.id
WHERE l.loan_status_id IN (300, 600, 601, 700)
  AND l.currency_code = 'RWF'
  AND mc.legal_form_enum = 2
  AND first_payment.firstPaymentDate IS NOT NULL
  AND l.last_repayment_date IS NOT NULL
  AND (l.stop_consumer_credit_upload_to_trans_union IS NULL OR l.stop_consumer_credit_upload_to_trans_union = false) "/>
            <column name="core_report" valueBoolean="true"/>
            <column name="use_report" valueBoolean="true"/>
            <column name="self_service_user_report" valueBoolean="false"/>
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_permission_VERIFYLOANONTRANSUNIONCRBRWANDA_LOAN">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(1) from m_permission where code = 'VERIFYLOANONTRANSUNIONCRBRWANDA_LOAN';
            </sqlCheck>
        </preConditions>
        <insert tableName="m_permission">
            <column name="grouping" value="portfolio" />
            <column name="code" value="VERIFYLOANONTRANSUNIONCRBRWANDA_LOAN" />
            <column name="entity_name" value="LOAN" />
            <column name="action_name" value="VERIFYLOANONTRANSUNIONCRBRWANDA" />
        </insert>
    </changeSet>
    <changeSet id="create-m_transunion_crb_header" author="bosco@fiter.io">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="m_transunion_crb_header"/>
            </not>
        </preConditions>
        <createTable tableName="m_transunion_crb_header">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"  />
            </column>
            <column name="client_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion_crb_header-m_client_client_id" references="m_client(id)"/>
            </column>
            <column name="crb_name" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="pdf_id" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="product_display_name" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="report_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="report_type" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="request_no" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="requester" type="varchar(255)">
                <constraints nullable="true" />
            </column>
        </createTable>
    </changeSet>
    <changeSet id="create-m_transunion_crb_score_output_2" author="bosco@fiter.io">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="m_transunion_crb_score_output"/>
            </not>
        </preConditions>
        <createTable tableName="m_transunion_crb_score_output">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"  />
            </column>
            <column name="header_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion-m_transunion_crb_header_header_id" references="m_transunion_crb_header(id)"/>
            </column>
            <column name="grade" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="positive_score" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="possibility" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="reason_code_aarc1" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="reason_code_aarc2" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="reason_code_aarc3" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="reason_code_aarc4" type="varchar(255)">
                <constraints nullable="true" />
            </column>
        </createTable>
    </changeSet>
    <changeSet id="create-m_transunion_crb_personal_profile_2" author="bosco@fiter.io">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="m_transunion_crb_personal_profile"/>
            </not>
        </preConditions>
        <createTable tableName="m_transunion_crb_personal_profile">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"  />
            </column>
            <column name="header_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion_678_crb_header_header_id" references="m_transunion_crb_header(id)"/>
            </column>
            <column name="crn" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="date_of_birth" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="full_name" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="gender" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="health_insurance_no" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="marital_status" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="national_id" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="other_names" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="salutation" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="surname" type="varchar(255)">
                <constraints nullable="true" />
            </column>
        </createTable>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="create-m_transunion_crb_header-auditable" context="mysql">
        <addColumn tableName="m_transunion_crb_header">
            <column name="created_on_utc" type="DATETIME"/>
            <column name="created_by" type="BIGINT"/>
            <column name="last_modified_by" type="BIGINT"/>
            <column name="last_modified_on_utc" type="DATETIME"/>
        </addColumn>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="create-m_transunion_crb_header-auditable" context="postgresql">
        <addColumn tableName="m_transunion_crb_header">
            <column name="created_on_utc" type="TIMESTAMP WITH TIME ZONE"/>
            <column name="created_by" type="BIGINT" />
            <column name="last_modified_by" type="BIGINT"/>
            <column name="last_modified_on_utc" type="TIMESTAMP WITH TIME ZONE"/>
        </addColumn>
    </changeSet>
    <changeSet id="create-m_transunion_crb_corporate_profile_3" author="bosco@fiter.io">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="m_transunion_crb_corporate_profile"/>
            </not>
        </preConditions>
        <createTable tableName="m_transunion_crb_corporate_profile">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"  />
            </column>
            <column name="header_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion-879-m_transunion_crb_header_header_id" references="m_transunion_crb_header(id)"/>
            </column>
            <column name="crn" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="company_reg_no" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="company_name" type="varchar(255)">
                <constraints nullable="true" />
            </column>
        </createTable>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_column_m_transunion_crb_header_loan_id">

        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="m_transunion_crb_header" columnName="loan_id"/>
            </not>
        </preConditions>
        <addColumn tableName="m_transunion_crb_header">
            <column name="loan_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion_crb_header_loan_id" references="m_loan(id)"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_permission_VERIFYLOANONMETROPOLCRBKENYA_LOAN">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(1) from m_permission where code = 'VERIFYLOANONMETROPOLCRBKENYA_LOAN';
            </sqlCheck>
        </preConditions>
        <insert tableName="m_permission">
            <column name="grouping" value="portfolio" />
            <column name="code" value="VERIFYLOANONMETROPOLCRBKENYA_LOAN" />
            <column name="entity_name" value="LOAN" />
            <column name="action_name" value="VERIFYLOANONMETROPOLCRBKENYA_LOAN" />
        </insert>
    </changeSet>
    <changeSet author="bosco@fiter.io" id="add_permission_VERIFYLOANCREDITINFOENHANCEDONMETROPOLCRBKENYA_LOAN">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(1) from m_permission where code = 'VERIFYLOANCREDITINFOENHANCEDONMETROPOLCRBKENYA_LOAN';
            </sqlCheck>
        </preConditions>
        <insert tableName="m_permission">
            <column name="grouping" value="portfolio" />
            <column name="code" value="VERIFYLOANCREDITINFOENHANCEDONMETROPOLCRBKENYA_LOAN" />
            <column name="entity_name" value="LOAN" />
            <column name="action_name" value="VERIFYLOANCREDITINFOENHANCEDONMETROPOLCRBKENYA_LOAN" />
        </insert>
    </changeSet>
    <changeSet id="create-m_transunion_crb_summary" author="bosco@fiter.io">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="m_transunion_crb_summary"/>
            </not>
        </preConditions>
        <createTable tableName="m_transunion_crb_summary">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"  />
            </column>
            <column name="header_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion_crb_summary_header_id" references="m_transunion_crb_header(id)"/>
            </column>
            <column name="bc_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_180_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_180_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_180_other_sectors" type="int">
            <constraints nullable="true" />
            </column>
            <column name="bc_90_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_90_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_90_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_365_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_365_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="bc_365_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="fc_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="fc_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="fc_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="last_bounced_cheque_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="last_credit_application_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="last_fraud_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="last_npa_listing_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="last_pa_listing_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="last_insurance_policy_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="npa_accounts_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="npa_accounts_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="npa_accounts_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="open_accounts_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="open_accounts_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="open_accounts_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_accounts_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_accounts_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_accounts_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_accounts_with_dh_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_accounts_with_dh_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_accounts_with_dh_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="closed_accounts_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="closed_accounts_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="closed_accounts_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="ca_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="ca_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="ca_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="ch_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="ch_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="ch_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_31_to_60_days_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_31_to_60_days_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_31_to_60_days_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_61_to_90_days_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_61_to_90_days_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_61_to_90_days_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_91_to_180_days_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_91_to_180_days_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_91_to_180_days_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_last_30_days_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_last_30_days_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="enq_last_30_days_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_closed_accounts_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_closed_accounts_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_closed_accounts_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_closed_accounts_with_dh_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_closed_accounts_with_dh_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="pa_closed_accounts_with_dh_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="insurance_policies_all_sectors" type="int">
                <constraints nullable="true" />
            </column>
            <column name="insurance_policies_my_sector" type="int">
                <constraints nullable="true" />
            </column>
            <column name="insurance_policies_other_sectors" type="int">
                <constraints nullable="true" />
            </column>
        </createTable>
    </changeSet>
    <changeSet id="create-m_transunion_crb_account" author="bosco@fiter.io">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="m_transunion_crb_account"/>
            </not>
        </preConditions>
        <createTable tableName="m_transunion_crb_account">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"  />
            </column>
            <column name="header_id" type="bigint">
                <constraints nullable="false" foreignKeyName="FK_m_transunion_crb_account_header_id" references="m_transunion_crb_header(id)"/>
            </column>
            <column name="account_no" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="account_opening_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="account_owner" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="account_status" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="account_type" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="arrear_amount" type="DECIMAL(19, 6)">
                <constraints nullable="true" />
            </column>
            <column name="arrear_days" type="int">
                <constraints nullable="true" />
            </column>
            <column name="balance_amount" type="DECIMAL(19, 6)">
                <constraints nullable="true" />
            </column>
            <column name="currency" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="disputed" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false" />
            </column>
            <column name="is_my_account" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false" />
            </column>
            <column name="last_payment_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="listing_date" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="principal_amount" type="DECIMAL(19, 6)">
                <constraints nullable="true" />
            </column>
            <column name="repayment_duration" type="int">
                <constraints nullable="true" />
            </column>
            <column name="repayment_term" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="scheduled_payment_amount" type="DECIMAL(19, 6)">
                <constraints nullable="true" />
            </column>
            <column name="trade_sector" type="varchar(255)">
                <constraints nullable="true" />
            </column>
            <column name="worst_arrear" type="int">
            <constraints nullable="true" />
            </column>
        </createTable>
    </changeSet>
</databaseChangeLog>
